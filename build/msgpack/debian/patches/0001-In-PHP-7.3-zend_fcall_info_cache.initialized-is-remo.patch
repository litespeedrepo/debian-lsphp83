From: Aaron Stone <aaron@serendipity.cx>
Date: Sun, 19 Aug 2018 10:34:57 +0000
Subject: In PHP 7.3 zend_fcall_info_cache.initialized is removed.

---
 msgpack_convert.c |  2 ++
 msgpack_pack.c    | 22 +++++++++++-----------
 php_msgpack.h     | 17 +++++++++++++++++
 3 files changed, 30 insertions(+), 11 deletions(-)

diff --git a/msgpack_convert.c b/msgpack_convert.c
index 117727e..b1d4334 100644
--- a/msgpack_convert.c
+++ b/msgpack_convert.c
@@ -300,7 +300,9 @@ int msgpack_convert_object(zval *return_value, zval *tpl, zval *value) /* {{{ */
         fci.params = &params;
         fci.no_separation = 1;
 
+#if PHP_VERSION_ID < 70300
         fcc.initialized = 1;
+#endif
         fcc.function_handler = ce->constructor;
 
 #if PHP_VERSION_ID < 70100
diff --git a/msgpack_pack.c b/msgpack_pack.c
index 646453a..b9785a8 100644
--- a/msgpack_pack.c
+++ b/msgpack_pack.c
@@ -280,15 +280,15 @@ static inline void msgpack_serialize_array(smart_str *buf, zval *val, HashTable
 					value_noref = value;
 				}
 
-				if ((Z_TYPE_P(value_noref) == IS_ARRAY && ZEND_HASH_GET_APPLY_COUNT(Z_ARRVAL_P(value_noref)) > 1)) {
+				if (Z_TYPE_P(value_noref) == IS_ARRAY && Z_IS_RECURSIVE_P(value_noref)) {
 					msgpack_pack_nil(buf);
 				} else {
-					if (Z_TYPE_P(value_noref) == IS_ARRAY && ZEND_HASH_APPLY_PROTECTION(Z_ARRVAL_P(value_noref))) {
-						ZEND_HASH_INC_APPLY_COUNT(Z_ARRVAL_P(value_noref));
+					if (Z_TYPE_P(value_noref) == IS_ARRAY && Z_REFCOUNTED_P(value_noref)) {
+						Z_PROTECT_RECURSION_P(value_noref);
 					}
 					msgpack_serialize_zval(buf, value, var_hash);
-					if (Z_TYPE_P(value_noref) == IS_ARRAY && ZEND_HASH_APPLY_PROTECTION(Z_ARRVAL_P(value_noref))) {
-						ZEND_HASH_DEC_APPLY_COUNT(Z_ARRVAL_P(value_noref));
+					if (Z_TYPE_P(value_noref) == IS_ARRAY && Z_REFCOUNTED_P(value_noref)) {
+						Z_UNPROTECT_RECURSION_P(value_noref);
 					}
 				}
 			} ZEND_HASH_FOREACH_END();
@@ -298,10 +298,10 @@ static inline void msgpack_serialize_array(smart_str *buf, zval *val, HashTable
 
 			for (i = 0; i < n; i++) {
 				if ((data = zend_hash_index_find(ht, i)) == NULL || &data == &val ||
-						(Z_TYPE_P(data) == IS_ARRAY && ZEND_HASH_GET_APPLY_COUNT(Z_ARRVAL_P(data)) > 1)) {
+						(Z_TYPE_P(data) == IS_ARRAY && Z_IS_RECURSIVE_P(data))) {
 					msgpack_pack_nil(buf);
 				} else if (Z_TYPE_P(data) == IS_REFERENCE && Z_TYPE_P(Z_REFVAL_P(data)) == IS_ARRAY &&
-						ZEND_HASH_GET_APPLY_COUNT(Z_ARRVAL_P(Z_REFVAL_P(data))) > 1) {
+						Z_IS_RECURSIVE_P(Z_REFVAL_P(data))) {
 					msgpack_pack_nil(buf);
 				} else {
 					if (Z_TYPE_P(data) == IS_REFERENCE) {
@@ -310,14 +310,14 @@ static inline void msgpack_serialize_array(smart_str *buf, zval *val, HashTable
 						data_noref = data;
 					}
 
-					if (Z_TYPE_P(data_noref) == IS_ARRAY && ZEND_HASH_APPLY_PROTECTION(Z_ARRVAL_P(data_noref))) {
-						ZEND_HASH_INC_APPLY_COUNT(Z_ARRVAL_P(data_noref));
+					if (Z_TYPE_P(data_noref) == IS_ARRAY && Z_REFCOUNTED_P(data_noref)) {
+						Z_PROTECT_RECURSION_P(data_noref);
 					}
 
 					msgpack_serialize_zval(buf, data, var_hash);
 
-					if (Z_TYPE_P(data_noref) == IS_ARRAY && ZEND_HASH_APPLY_PROTECTION(Z_ARRVAL_P(data_noref))) {
-						ZEND_HASH_DEC_APPLY_COUNT(Z_ARRVAL_P(data_noref));
+					if (Z_TYPE_P(data_noref) == IS_ARRAY && Z_REFCOUNTED_P(data_noref)) {
+						Z_UNPROTECT_RECURSION_P(data_noref);
 					}
 				}
 			}
diff --git a/php_msgpack.h b/php_msgpack.h
index af37f70..7d42564 100644
--- a/php_msgpack.h
+++ b/php_msgpack.h
@@ -44,4 +44,21 @@ PHP_MSGPACK_API void php_msgpack_serialize(
 PHP_MSGPACK_API void php_msgpack_unserialize(
     zval *return_value, char *str, size_t str_len);
 
+/** Backport macro from PHP 7.3*/
+#ifndef Z_IS_RECURSIVE_P
+#define Z_IS_RECURSIVE_P(obj) (ZEND_HASH_GET_APPLY_COUNT(Z_ARRVAL_P(obj)) > 1)
+#endif
+
+#ifndef Z_REFCOUNTED
+#define Z_REFCOUNTED ZEND_HASH_APPLY_PROTECTION(obj)
+#endif
+
+#ifndef Z_PROTECT_RECURSION_P
+#define Z_PROTECT_RECURSION_P(obj) ZEND_HASH_INC_APPLY_COUNT(Z_ARRVAL_P(obj))
+#endif
+
+#ifndef Z_UNPROTECT_RECURSION_P
+#define Z_UNPROTECT_RECURSION_P(obj) ZEND_HASH_DEC_APPLY_COUNT(Z_ARRVAL_P(obj))
+#endif
+
 #endif  /* PHP_MSGPACK_H */
